<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Workflow PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Workflow explicitTransitions="true" name="STS-Batch-Role-Provisioning">
  <Variable name="emailArgList">
    <Description>parameter for the &amp;#39;Notify&amp;#39; step which call the &amp;#39;SP Dynamic Send Emails Sub&amp;#39;.</Description>
  </Variable>
  <Variable initializer="script:(identityId != void ) ? identityId : wfcontext.getWorkflowCase().get(&quot;quickLinkIdentityId&quot;);" input="true" name="identityId">
    <Description>The ID of the identity selected for password reset.</Description>
  </Variable>
  <Variable initializer="script:context.getObject(Identity.class,identityId).getDisplayName();" name="identityDisplayName">
    <Description>The displayName of the identity being updated.</Description>
  </Variable>
  <Variable initializer="script:context.getObject(Identity.class,identityId).getName();" name="identityName">
    <Description>The displayName of the identity being updated.</Description>
  </Variable>
  <Variable name="applicationGroup"/>
  <Variable initializer="true" name="trace"/>
  <Variable name="targetApplications"/>
  <Variable name="sourceApplication"/>
  <Variable name="emailArgList">
    <Description>parameter for the &amp;#39;Notify&amp;#39; step which call the &amp;#39;SP Dynamic Send Emails Sub&amp;#39;.</Description>
  </Variable>
  <Variable initializer="script:(identityId != void ) ? identityId : wfcontext.getWorkflowCase().get(&quot;quickLinkIdentityId&quot;);" input="true" name="identityId">
    <Description>The ID of the identity selected for password reset.</Description>
  </Variable>
  <Variable initializer="script:context.getObject(Identity.class,identityId).getDisplayName();" name="identityDisplayName">
    <Description>The displayName of the identity being updated.</Description>
  </Variable>
  <Variable initializer="script:context.getObject(Identity.class,identityId).getName();" name="identityName">
    <Description>The displayName of the identity being updated.</Description>
  </Variable>
  <Variable name="applicationGroup">
    <Description>Which application group is used to filter the list of &amp;#39;Applications&amp;#39;..</Description>
  </Variable>
  <Variable initializer="true" name="trace"/>
  <Variable name="targetApplications"/>
  <Variable name="sourceApplication"/>
  <Description>This workflow will batch provision a Role in multiple applications.</Description>
  <Step icon="Start" name="Start" posX="26" posY="12">
    <Transition to="Server Group Selection"/>
  </Step>
  <Step icon="Stop" name="Stop" posX="618" posY="145"/>
  <Step icon="Default" name="Role Selection" posX="329" posY="11">
    <Approval name="STS - Form - Role Selection" return="" send="">
      <Form name="STS - Form - Role Selection">
        <Attributes>
          <Map>
            <entry key="pageTitle" value="STS - Form - Role Selection"/>
          </Map>
        </Attributes>
        <FormRef name="STS - Form - Role Selection"/>
      </Form>
    </Approval>
    <Description>Select the Role from the source application to replicate on the target application(s).</Description>
    <Transition to="Approve and Provision"/>
  </Step>
  <Step icon="Default" name="Approve and Provision" posX="441" posY="12">
    <Arg name="approvalScheme"/>
    <Arg name="formTemplate"/>
    <Arg name="enableRetryRequest"/>
    <Arg name="securityOfficerElectronicSignature"/>
    <Arg name="fallbackApprover"/>
    <Arg name="endOnManualWorkItems"/>
    <Arg name="userEmailTemplate"/>
    <Arg name="workItemPriority"/>
    <Arg name="project"/>
    <Arg name="workItemComments"/>
    <Arg name="identityRequestId"/>
    <Arg name="approvalSplitPoint"/>
    <Arg name="source"/>
    <Arg name="managerElectronicSignature"/>
    <Arg name="identityDisplayName"/>
    <Arg name="foregroundProvisioning"/>
    <Arg name="ownerElectronicSignature"/>
    <Arg name="approvalMode"/>
    <Arg name="batchRequestItemId"/>
    <Arg name="trace"/>
    <Arg name="endOnProvisioningForms"/>
    <Arg name="approvalAssignmentRule"/>
    <Arg name="plan"/>
    <Arg name="flow"/>
    <Arg name="identityName"/>
    <Arg name="approvalSet"/>
    <Arg name="manualActionsEmailTemplate"/>
    <Arg name="policyViolations"/>
    <Arg name="filterRejects"/>
    <Arg name="ownerEmailTemplate"/>
    <Arg name="splitProvisioning"/>
    <Arg name="setPreviousApprovalDecisions"/>
    <Arg name="clearApprovalDecisions"/>
    <Arg name="requesterEmailTemplate"/>
    <Arg name="approvalEmailTemplate"/>
    <Arg name="ticketManagementApplication"/>
    <Arg name="optimisticProvisioning"/>
    <Arg name="securityOfficerEmailTemplate"/>
    <Arg name="securityOfficerName"/>
    <Arg name="approvingIdentities"/>
    <Arg name="managerEmailTemplate"/>
    <Description>Approve and Provision</Description>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="Approve and Provision Subprocess"/>
    </WorkflowRef>
    <Transition to="Notify"/>
  </Step>
  <Step icon="Default" name="Notify" posX="539" posY="12">
    <Arg name="identityDisplayName"/>
    <Arg name="emailTemplateExists"/>
    <Arg name="trace"/>
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="emailArgs"/>
    <Arg name="emailIterator"/>
    <Arg name="emailArgList" value="ref:emailArgList"/>
    <Description>Email notify the requestee.</Description>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="SP Dynamic Send Emails Sub"/>
    </WorkflowRef>
    <Transition to="Stop"/>
  </Step>
  <Step icon="Default" name="Server Selection" posX="214" posY="12">
    <Approval name="STS - Form - Server Selection" owner="alexz" return="targetApplications" send="applicationGroup">
      <Form name="STS - Form - Server Selection">
        <Attributes>
          <Map>
            <entry key="pageTitle" value="STS - Form - Server Selection"/>
          </Map>
        </Attributes>
        <FormRef name="STS - Form - Server Selection"/>
      </Form>
    </Approval>
    <Arg name="applicationGroups" value="ref:applicationGroups"/>
    <Transition to="Stop"/>
  </Step>
  <Step icon="Default" name="Server Group Selection" posX="109" posY="11" resultVariable="applicationGroup">
    <Approval name="STS - Form - Server Group Selection" return="applicationGroup" send="">
      <Form name="STS - Form - Server Group Selection">
        <Attributes>
          <Map>
            <entry key="pageTitle" value="STS - Form - Server Group Selection"/>
          </Map>
        </Attributes>
        <FormRef name="STS - Form - Server Group Selection"/>
      </Form>
    </Approval>
    <Description>Select the type of server from :

Windows Server OPS
Windows Server DBA
Linux 1
Linux 2
</Description>
    <Transition to="Calculate Source Server List"/>
  </Step>
  <Step icon="Default" name="Calculate Source Server List" posX="171" posY="121" resultVariable="sourceApplication">
    <Arg name="applicationGroup" value="ref:applicationGroup"/>
    <Description>Generate a List of Server from the 'Server Group' selected in the previous step</Description>
    <Script>
      <Source><![CDATA[import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import sailpoint.api.SailPointContext;
import sailpoint.api.IdentityService;
import sailpoint.object.Application;
import sailpoint.object.Filter;
import sailpoint.object.Identity;
import sailpoint.object.Link;
import sailpoint.object.QueryOptions;

import sailpoint.tools.GeneralException;

/*------------------------------------------------------------------------------------------------------
 *  getServerListFromApplicationGroup
 *  
 *   STS' applications are group in applicationGroups (Server Types : 'Windows Server OPS',
 *   'Windows Server DBA', 'Linux 1', 'Linux 2', any string...
 *   
 *   So this method output all IIQ's 'applications' where match the applicationGroup provided...
 *   
 *   The 'applicationGroup' can be implemented as an extended Application Attribute or as a 'Profile Class'
 *   in the Application->Details tab...
 *------------------------------------------------------------------------------------------------------*/

	boolean            proceed = true;
	ArrayList<String>  applicationNames = null;
	StringBuffer       csv_list = null;
	QueryOptions   	   queryOptions = null;
	Filter             filter = null;
	List<Application>  applicationList = null;
	
Logger logger = Logger.getLogger("sts.form.script.getServerListFromApplicationGroup");
	
    logger.debug (" [ getServerListFromApplicationGroup ] Entering ...appGroup = '" + applicationGroup + "'");

	if (applicationGroup != null)
	{
	  filter = Filter.eq("applicationGroup", applicationGroup);
	  queryOptions = new QueryOptions(filter);
	  
	  logger.debug (" [ getServerListFromApplicationGroup ] queryOptions  = '" + queryOptions.toString() + "'");

	   try
	   {
	   
	     applicationList = context.getObjects(Application.class, queryOptions);


	     if (applicationList != null && applicationList.size() > 0)
	     {
	    	for (Application app : applicationList)
	    	{
	    		if (applicationNames == null)
	  	          applicationNames = new ArrayList<String>();

	    		applicationNames.add(app.getName());
	    	}
	     }
	     else
	       logger.debug (" [ getServerListFromApplicationGroup ] The Application list matching " +
	    		   		 "'applicationGroup = '" + applicationGroup + "' is NULL !");
	    	 
	   }
	   catch (GeneralException e)
	   {
		  proceed = false;
  	      logger.error (" [ getServerListFromApplicationGroup ] SailPointContext (" +  applicationGroup +
  	    		  		") threw an exception : " + e.toString());
		   
	   }
	}
	
	if (proceed == true)
	{
		if (applicationNames != null)
		{
		  for (String value : applicationNames)	
		  {
			  if (csv_list == null)
				 csv_list = new StringBuffer();
			  
			  csv_list.append(value + ",");
		  }
		  
	      logger.debug (" [ getServerListFromApplicationGroup ] Leaving ... ApplicationNames list (CSV) = '" +
	    		  		csv_list + "'");
		}
		else
	      logger.debug (" [ getServerListFromApplicationGroup ] Leaving ... ApplicationNames list is NULL !" );
	}	
		
	return applicationNames;

]]></Source>
    </Script>
    <Transition to="Server Selection"/>
  </Step>
  <Step icon="Default" name="Generic Step" posX="382" posY="170"/>
</Workflow>
